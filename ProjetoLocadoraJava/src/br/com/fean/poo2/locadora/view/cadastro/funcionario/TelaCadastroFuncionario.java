/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.com.fean.poo2.locadora.view.cadastro.funcionario;


import br.com.fean.poo2.locadora.modelo.funcionario.Funcionario;
import br.com.fean.poo2.locadora.modelo.funcionario.FuncionarioDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.com.fean.poo2.locadora.control.funcionario.FuncionarioServiceImpl;
import br.com.fean.poo2.locadora.control.funcionario.FuncionarioService;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author DanielaKlinkowski
 */
public class TelaCadastroFuncionario extends javax.swing.JPanel {
     int idFuncionarioSelecionado = 0;
    FuncionarioServiceImpl funcionarioServiceImpl = new FuncionarioServiceImpl();

    /**
     * Creates new form TelaCadastroFuncionario1
     */
    public TelaCadastroFuncionario() {
        
    
        initComponents();
//        carregarDadosTabela();
//        carregarDadosDaTebela();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        codigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        nome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        usuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        senha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        nome1 = new javax.swing.JLabel();
        txtPesquisaNome = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Funcionário"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        codigo.setText("Código:");
        jPanel1.add(codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 30, -1, -1));

        txtCodigo.setEnabled(false);
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 27, 82, -1));

        nome.setText("Nome:");
        jPanel1.add(nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 30, -1, -1));
        jPanel1.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 27, 401, -1));

        usuario.setText("Usuário:");
        jPanel1.add(usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 64, -1, -1));
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 61, 170, -1));

        senha.setText("Senha:");
        jPanel1.add(senha, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 64, -1, -1));
        jPanel1.add(txtSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 61, 100, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 600, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nome1.setText("Nome:");
        jPanel2.add(nome1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 31, -1, -1));
        jPanel2.add(txtPesquisaNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 28, 443, -1));

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisarMouseClicked(evt);
            }
        });
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jPanel2.add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 27, -1, -1));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 116, 600, 70));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 595, 134));

        btnNovo.setText("Novo");
        btnNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNovoMouseClicked(evt);
            }
        });
        add(btnNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 335, -1, -1));

        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 335, 72, -1));

        btnDeletar.setText("Deletar");
        btnDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeletarMouseClicked(evt);
            }
        });
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        add(btnDeletar, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 335, -1, -1));

        btnCancelar.setText("Cancelar");
        add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 335, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarMouseClicked

    private void btnNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNovoMouseClicked
        // TODO add your handling code here:
         txtNome.setText("");
        txtUsuario.setText("");
        txtSenha.setText("");
        idFuncionarioSelecionado=0;
    }//GEN-LAST:event_btnNovoMouseClicked

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        ArrayList<Funcionario> lista = new ArrayList<Funcionario>();
        try {
            lista = funcionarioServiceImpl.pesquisarFuncionarios(txtPesquisaNome.getText());
        } catch (Exception ex) {
            Logger.getLogger(TelaCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        carregarDadosTabela(lista);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        idFuncionarioSelecionado=
Integer.parseInt(modelo.getValueAt(tabela.getSelectedRow(), 0).toString());

txtNome.setText(modelo.getValueAt(tabela.getSelectedRow(), 1).toString());

    }//GEN-LAST:event_tabelaMouseClicked

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        // TODO add your handling code here:
   
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
  //      Funcionario funcionario=new Funcionario(
     /*         idFuncionarioSelecionado,
             txtNome.getText(),
               txtUsuario.getText(),
                txtSenha.getText()); 
             
        
  if (idFuncionarioSelecionado==0){
     
 try {
     funcionarioServiceImpl.inserirFuncionario(funcionario);
      JOptionPane.showMessageDialog(null,"inserção"
             + " realizada com sucesso");
 }      
catch (Exception e) {
    JOptionPane.showMessageDialog(null,"inserção"
             + " NÃO realizada ocorreu o erro: "+e);
}finally{
     txtNome.setText("");
     txtUsuario.setText("");
     txtSenha.setText("");
 }
     }  else {
         try {
 funcionarioServiceImpl.alterarFuncionario(funcionario);

     JOptionPane.showMessageDialog(null,"alteração"
             + " realizada com sucesso");
 }      
catch (Exception e) {
    JOptionPane.showMessageDialog(null,"alteração"
             + " NÃO realizada ocorreu o erro: "+e);
}
    }        */                              
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnDeletarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarMouseClicked
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog( null, "Deseja realmente apagar a linha selecionada?" )==0){ 
try{
        Funcionario funcionario = 
                funcionarioServiceImpl.retornarFuncionario(idFuncionarioSelecionado);
        funcionarioServiceImpl.deletarFuncionario(funcionario);
          carregarDadosDaTabela();  
        } catch (Exception ex) {
            
        }
        }
    }//GEN-LAST:event_btnDeletarMouseClicked

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog( null, "Deseja realmente apagar a linha selecionada?" )==0){ 
try{
        Funcionario funcionario = 
                funcionarioServiceImpl.retornarFuncionario(idFuncionarioSelecionado);
        funcionarioServiceImpl.deletarFuncionario(funcionario);
          carregarDadosDaTabela();  
        } catch (Exception ex) {
        }
        }
 
    }//GEN-LAST:event_btnDeletarActionPerformed
    
        
     public void carregarDadosTabela(ArrayList<Funcionario> lista){
DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
 modelo.setRowCount( 0 );        
        try {
            
 for (int i=0;i<lista.size();i++){
     System.out.println("lista");
     System.out.println("funcionario nom "+lista.get(i).getNome());
     
    modelo.addRow(new Object[]{
        lista.get(i).getId(),
       
        lista.get(i).getNome()
    
    
    });  
}
 }      
catch (Exception e) {
    JOptionPane.showMessageDialog(null,"leitura de dados "
            + "de funcionario com problema..."
             + " erro: "+e);

    }
     }
          public void carregarDadosDaTabela(){
DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
 modelo.setRowCount( 0 );        
        try {
            ArrayList<Funcionario> lista = 
           funcionarioServiceImpl.retornarFuncionarios();
 for (int i=0;i<lista.size();i++){
    modelo.addRow(new Object[]{
        lista.get(i).getId(),
        lista.get(i).getNome()});  
}
 }      
catch (Exception e) {
    JOptionPane.showMessageDialog(null,"leitura de dados "
            + "de funcionario com problema..."
             + " erro: "+e);
}
 }      
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel codigo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nome;
    private javax.swing.JLabel nome1;
    private javax.swing.JLabel senha;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisaNome;
    private javax.swing.JTextField txtSenha;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JLabel usuario;
    // End of variables declaration//GEN-END:variables

    

}
